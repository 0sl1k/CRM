spring.application.name=Crm_adv

# ===== PostgreSQL Settings =====
spring.datasource.url=jdbc:postgresql://<HOST>:<PORT>/<DB_NAME>
spring.datasource.username=<DB_USERNAME>
spring.datasource.password=<DB_PASSWORD>
spring.datasource.driver-class-name=org.postgresql.Driver

# ===== JPA & Hibernate =====
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update

# ===== Redis =====
spring.data.redis.host=<REDIS_HOST>
spring.data.redis.port=<REDIS_PORT>

# ===== Elasticsearch =====
spring.elasticsearch.uris=http://<ES_HOST>:9200

# ===== ClickHouse =====
clickhouse.datasource.url=jdbc:clickhouse://<CH_HOST>:8123/<DB_NAME>?compress=0
clickhouse.datasource.driver-class-name=com.clickhouse.jdbc.ClickHouseDriver
clickhouse.datasource.username=<CH_USERNAME>
clickhouse.datasource.password=<CH_PASSWORD>

# ===== JWT Settings =====
glek.app.jwtCookieName=JWT-TOKEN
glek.app.jwtSecret=<YOUR_JWT_SECRET>

# ===== OAuth2 Configuration =====
spring.security.oauth2.client.registration.google.client-id=<GOOGLE_CLIENT_ID>
spring.security.oauth2.client.registration.google.client-secret=<GOOGLE_CLIENT_SECRET>
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub